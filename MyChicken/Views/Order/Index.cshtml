@using MyChicken.ViewModel
@model OrderViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>OrderViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)


        @Html.HiddenFor(model => model.OrderDate)
        @Html.HiddenFor(model => model.Total)
        
        <table class="table">
            <caption></caption>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].Product.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].Amount)
                </th>
            </tr>        
            @for (var i = 0; i < Model.Products.Count; i++)
            {
                @*@Html.Partial("_OrderPartial", Model.Products[i])*@
                @Html.Hidden("products.Index", (i + 10))
                @Html.Hidden("products["+ (i + 10) +"].Id",Model.Products[i].Product.Id)
                @Html.Hidden("products[" + (i + 10) + "].Name", Model.Products[i].Product.Name)
                @Html.Hidden("products[" + (i + 10) + "].Amount", Model.Products[i].Product.Amount)
                <tr>
                    <td>@Html.DisplayFor(model => model.Products[i].Product.Name)</td>
                    <td>@Html.TextBox("products["+ (i + 10) +"].Quantity",Model.Products[i].Quantity)</td>
                    <td>@Html.TextBox("products["+ (i + 10) +"].Amount", Model.Products[i].Amount)</td>
                </tr>
            }
        </table>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function QuantityChange()
        {
            alert("Alert !");
        }
    </script>
    @*<script>
        $(document).ready(function () {
            $('#p_Quantity').on("change", function () {
                p_Amount.value = 1000;
                alert("Change ! ");
            });
        });
    </script>*@
}
